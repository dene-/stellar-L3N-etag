name: Firmware Build and Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write  # required to create tags and releases

concurrency:
  group: firmware-release
  cancel-in-progress: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # need full history for tags and release notes

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure 'python' command is available
        run: |
          sudo apt-get update
          sudo apt-get install -y python-is-python3

      - name: Bump version tag (Conventional Commits)
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Bump based on commit messages since last tag; defaults to 'patch' if none match
          default_bump: patch
          release_branches: main,master
          tag_prefix: 'v'
          initial_version: '0.0.0'

      - name: Build firmware
        run: make -C Firmware all

      - name: Prepare release asset name
        id: prep
        shell: bash
        run: |
          NEW_TAG="${{ steps.tag.outputs.new_tag }}"
          VERSION="${NEW_TAG#v}"
          ASSET="STELLARIS_PRO_213_BWR_${VERSION}.bin"
          # The build outputs Firmware/ATC_Paper.bin per Firmware/makefile
          if [ ! -f Firmware/ATC_Paper.bin ]; then
            echo "Build did not produce Firmware/ATC_Paper.bin" >&2
            exit 1
          fi
          cp Firmware/ATC_Paper.bin "$ASSET"
          echo "asset_name=$ASSET" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          files: ${{ steps.prep.outputs.asset_name }}
          generate_release_notes: true  # auto notes from commits/PRs since previous tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
